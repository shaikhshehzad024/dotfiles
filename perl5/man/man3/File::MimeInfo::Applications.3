.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "File::MimeInfo::Applications 3"
.TH File::MimeInfo::Applications 3 2024-04-25 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
File::MimeInfo::Applications \- Find programs to open a file by mimetype
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&  use File::MimeInfo::Magic;
\&  use File::MimeInfo::Applications;
\&
\&  my $file = \*(Aq/foo/bar\*(Aq;
\&  my $mimetype = mimetype($file)
\&    || die "Could not find mimetype for $file\en";
\&
\&  my ($default, @other) = mime_applications($mimetype);
\&
\&  if (defined $default) {
\&    $default\->system($file)
\&  }
\&  else {
\&    # prompt user with choice from @others
\&    # ...
\&  }
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module tries to find applications that can open files
with a certain mimetype. This is done in the way suggested by
the freedesktop Desktop Entry specification. This module is
intended to be compatible with file managers and other applications that
implement this specification.
.PP
This module depends on File::DesktopEntry being installed.
.PP
To use this module effectively you need to have the desktop-file-utils
package from freedesktop and run update-desktop-database after installing
new .desktop files.
See <http://www.freedesktop.org/wiki/Software/desktop\-file\-utils>.
.PP
At the moment of writing this module is compatible with the way Nautilus (Gnome)
and with Thunar (XFCE) handle applications for mimetypes. I understand KDE
is still working on implementing the freedesktop mime specifications but will
follow. At the very least all perl applications using this module are using
the same defaults.
.SH EXPORT
.IX Header "EXPORT"
All methods are exported by default.
.SH METHODS
.IX Header "METHODS"
.ie n .IP mime_applications(MIMETYPE) 4
.el .IP \f(CWmime_applications(MIMETYPE)\fR 4
.IX Item "mime_applications(MIMETYPE)"
Returns an array of File::DesktopEntry objects. The first
is the default application for this mimetype, the rest are
applications that say they can handle this mimetype.
.Sp
If the first result is undefined there is no default application
and it is good practice to ask the user which application he wants
to use.
.ie n .IP mime_applications_all(MIMETYPE) 4
.el .IP \f(CWmime_applications_all(MIMETYPE)\fR 4
.IX Item "mime_applications_all(MIMETYPE)"
Like \f(CWmime_applications()\fR but also takes into account applications that
can open mimetypes from which MIMETYPE inherits. Parent mimetypes tell
something about the data format, all code inherits from text/plain for example.
.ie n .IP """mime_applications_set_default(MIMETYPE, APPLICATION)""" 4
.el .IP "\f(CWmime_applications_set_default(MIMETYPE, APPLICATION)\fR" 4
.IX Item "mime_applications_set_default(MIMETYPE, APPLICATION)"
Save a default application for this mimetype. This action will
affect other applications using the same mechanism to find a default
application.
.Sp
APPLICATION can either be a File::DesktopEntry object or
the basename of a .desktop file.
.ie n .IP """mime_applications_set_custom(MIMETYPE, COMMAND)""" 4
.el .IP "\f(CWmime_applications_set_custom(MIMETYPE, COMMAND)\fR" 4
.IX Item "mime_applications_set_custom(MIMETYPE, COMMAND)"
Save a custom shell command as default application.
Generates a DesktopEntry file on the fly and calls
\&\f(CW\*(C`mime_applications_set_custom\*(C'\fR.
Returns the DesktopEntry object.
.Sp
No checks are done at all on COMMAND.
It should however contain at least one word.
.SH NOTES
.IX Header "NOTES"
This module looks for associations files in the order specified in version 1.0
of the MIME applications specification. It will also attempt a last-resort
fallback to the legacy file
\&\fR\f(CI$XDG_DATA_HOME\fR\fI/applications/defaults.list\fR. In all cases, it will only write
to the recommended per-user defaults file located at
\&\fI\fR\f(CI$XDG_CONFIG_HOME\fR\fI/mimeapps.list\fR.
.SH AUTHOR
.IX Header "AUTHOR"
Jaap Karssenberg <pardus@cpan.org>
Maintained by Michiel Beijen <mb@x14.nl>
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright (c) 2005, 2012 Jaap G Karssenberg. All rights reserved.
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
File::DesktopEntry,
File::MimeInfo,
File::MimeInfo::Magic,
File::BaseDir
.PP
<http://freedesktop.org/wiki/Software/desktop\-file\-utils/>
<http://freedesktop.org/wiki/Specifications/mime\-apps\-spec/>
