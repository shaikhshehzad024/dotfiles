.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MIME::Base32 3"
.TH MIME::Base32 3 2017-05-18 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
MIME::Base32 \- Base32 encoder and decoder
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 4
\&    #!/usr/bin/env perl
\&    use strict;
\&    use warnings;
\&    use MIME::Base32;
\&
\&    my $encoded = encode_base32(\*(AqAladdin: open sesame\*(Aq);
\&    my $decoded = decode_base32($encoded);
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module is for encoding/decoding data much the way that MIME::Base64 does.
.PP
Prior to version 1.0, MIME::Base32 used the \f(CW\*(C`base32hex\*(C'\fR (or \f(CW\*(C`[0\-9A\-V]\*(C'\fR) encoding and
decoding methods by default. If you need to maintain that behavior, please call
\&\f(CW\*(C`encode_base32hex\*(C'\fR or \f(CW\*(C`decode_base32hex\*(C'\fR functions directly.
.PP
Now, in accordance with RFC\-3548, Section 5 <https://tools.ietf.org/html/rfc3548#section-5>,
MIME::Base32 uses the \f(CW\*(C`encode_base32\*(C'\fR and \f(CW\*(C`decode_base32\*(C'\fR functions by default.
.SH FUNCTIONS
.IX Header "FUNCTIONS"
The following primary functions are provided:
.SS decode
.IX Subsection "decode"
Synonym for \f(CW\*(C`decode_base32\*(C'\fR
.SS decode_rfc3548
.IX Subsection "decode_rfc3548"
Synonym for \f(CW\*(C`decode_base32\*(C'\fR
.SS decode_base32
.IX Subsection "decode_base32"
.Vb 1
\&    my $string = decode_base32($encoded_data);
.Ve
.PP
Decode some encoded data back into a string of text or binary data.
.SS decode_09AV
.IX Subsection "decode_09AV"
Synonym for \f(CW\*(C`decode_base32hex\*(C'\fR
.SS decode_base32hex
.IX Subsection "decode_base32hex"
.Vb 1
\&    my $string_or_binary_data = MIME::Base32::decode_base32hex($encoded_data);
.Ve
.PP
Decode some encoded data back into a string of text or binary data.
.SS encode
.IX Subsection "encode"
Synonym for \f(CW\*(C`encode_base32\*(C'\fR
.SS encode_rfc3548
.IX Subsection "encode_rfc3548"
Synonym for \f(CW\*(C`encode_base32\*(C'\fR
.SS encode_base32
.IX Subsection "encode_base32"
.Vb 1
\&    my $encoded = encode_base32("some string");
.Ve
.PP
Encode a string of text or binary data.
.SS encode_09AV
.IX Subsection "encode_09AV"
Synonym for \f(CW\*(C`encode_base32hex\*(C'\fR
.SS encode_base32hex
.IX Subsection "encode_base32hex"
.Vb 1
\&    my $encoded = MIME::Base32::encode_base32hex("some string");
.Ve
.PP
Encode a string of text or binary data. This uses the \f(CW\*(C`hex\*(C'\fR (or \f(CW\*(C`[0\-9A\-V]\*(C'\fR) method.
.SH AUTHORS
.IX Header "AUTHORS"
Jens Rehsack \- <rehsack@cpan.org> \- Current maintainer
.PP
Chase Whitener
.PP
Daniel Peder \- sponsored by Infoset s.r.o., Czech Republic
 \- <Daniel.Peder@InfoSet.COM> http://www.infoset.com \- Original author
.SH BUGS
.IX Header "BUGS"
Before reporting any new issue, bug or alike, please check
<https://rt.cpan.org/Dist/Display.html?Queue=MIME\-Base32>,
<https://github.com/perl5\-utils/MIME\-Base32/issues> or
<https://github.com/perl5\-utils/MIME\-Base32/pulls>, respectively, whether
the issue is already reported.
.PP
Please report any bugs or feature requests to
\&\f(CW\*(C`bug\-mime\-base32 at rt.cpan.org\*(C'\fR, or through the web interface at
<https://rt.cpan.org/NoAuth/ReportBug.html?Queue=MIME\-Base32>.
I will be notified, and then you'll automatically be notified of progress
on your bug as I make changes.
.PP
Any and all criticism, bug reports, enhancements, fixes, etc. are appreciated.
.SH SUPPORT
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc MIME::Base32
.Ve
.PP
You can also look for information at:
.IP \(bu 4
RT: CPAN's request tracker
.Sp
<https://rt.cpan.org/Dist/Display.html?Name=MIME\-Base32>
.IP \(bu 4
AnnoCPAN: Annotated CPAN documentation
.Sp
<http://annocpan.org/dist/MIME\-Base32>
.IP \(bu 4
MetaCPAN
.Sp
<https://metacpan.org/release/MIME\-Base32>
.SH "COPYRIGHT AND LICENSE INFORMATION"
.IX Header "COPYRIGHT AND LICENSE INFORMATION"
Copyright (c) 2003\-2010 Daniel Peder.  All rights reserved.
Copyright (c) 2015\-2016 Chase Whitener.  All rights reserved.
Copyright (c) 2016 Jens Rehsack.  All rights reserved.
.PP
This library is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
MIME::Base64, RFC\-3548 <https://tools.ietf.org/html/rfc3548#section-5>
